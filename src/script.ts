import { Script } from '@script_types/script/script';
import { ScriptConfig } from '../gen/spec_config'; /* File will be automatically generated by compiler! Run "nom run cli install" */
import { DataFetcher } from './data_fetcher';
import { specification } from './spec';

export class MyScript implements Script.Class<ScriptConfig> {

    private fetcher: DataFetcher | undefined;

    start = async (ctx: Script.Context, config: ScriptConfig): Promise<void> => {
        
        console.info("Ident: " + specification.id_ident);
        console.info("Config: ", config);

        this.fetcher = new DataFetcher(ctx, config);

        ctx.ui.subscribeDataRequests("weather_forecast", this.fetcher.dataRequest_WeatherForecast);
        ctx.ui.subscribeDataRequests("weather_now", this.fetcher.dataRequest_WeatherNow);

        await this.fetcher.start();
        console.log("Start done!");
    }

    stop = async (_reason: Script.StopReason): Promise<void> => {
        await this.fetcher?.stop();
    }
}

export const script = new MyScript();